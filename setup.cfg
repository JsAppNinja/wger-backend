[bdist_wheel]
universal = 1

[flake8]
exclude = extras, build, dist, node_modules, migrations, settings.py, docs
# H101: Use TODO(NAME)
# W503: line break before binary operator
ignore = H101,W503
max-line-length = 100
putty-ignore =
    **/urls.py : E501
    **/config/apps.py : F401
    **/core/apps.py : F401
    **/exercises/apps.py : F401
    **/gym/apps.py : F401
    **/manager/apps.py : F401

[isort]
sections = FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
skip: extras,build,dist,node_modules,migrations,docs,settings.py

# If set to true - ensures that if a star import is present, nothing else is
# imported from that namespace.
combine_star=False

# If set to true - imports will be sorted by their length instead of
# alphabetically.
length_sort=False

# An integer that represents the longest line-length you want a single import to
# take. Defaults to 80.
line_length=119

# A comment to consistently place directly above future imports.
import_heading_future=Future

# A comment to consistently place directly above imports from the standard library.
import_heading_stdlib=Standard Library

# A comment to consistently place directly above thirdparty imports.
import_heading_thirdparty=Third Party

# A comment to consistently place directly above imports from the current
# project.
import_heading_firstparty=wger

# A comment to consistently place directly above imports that start with '.'.
import_heading_localfolder=Local

# An integer that represents the number of spaces you would like to indent by or
# Tab to indent by a single tab.
indent='    '

# A list of imports that will be forced to display withing the first party
# category.
known_first_party=wger

# An integer that represents how you want imports to be displayed if their long
# enough to span multiple lines. A full definition of all possible modes can be
# found in isort's README.
multi_line_output=3
force_grid_wrap=True

# If set to true - isort will create separate sections withing "from" imports
# for CONSTANTS, Classes, and modules/functions.
order_by_type=True

# Forces a certain number of lines after the imports and before the first line
# of functional code. By default this is 2 lines if the first line of code is a
# class or function. Otherwise it's 1.
lines_after_imports=2

# If set to true - isort will combine as imports on the same line within for
# import statements. By default isort forces all as imports to display on their
# own lines.
combine_as_imports=True

# If set to true - isort will add imports even if the file specified is
# currently completely empty.
force_adds=False
